include:"pipeline.conf"

# The ultimate output files we want to get
rule all:
     input: 
    	 expand(MAIN_DIR + "mapping/bamFiles/{sample}.bam.bai", sample=SAMPLE), 
    	 expand(MAIN_DIR + "mapping/logFiles/{sample}.Log.final.out", sample=SAMPLE),
    	 MAIN_DIR + 'results/Counts.featureCount.tab.txt'

#Create  STAR Reference
rule create_STAR_reference_with_GTF:
  input: fasta = MAIN_DIR + 'reference/fasta/contigs.fa', gtf = MAIN_DIR + 'reference/annotation/contigs.gtf'
  output: SAindex =  MAIN_DIR +'reference/STARreference/SAindex' 
  threads : 16
  shell: "STAR "+STAR_BUILD_FLAGS +" --runThreadN {threads} --runMode genomeGenerate --genomeDir "+MAIN_DIR +"reference/STARreference --genomeFastaFiles {input.fasta} --sjdbGTFfile {input.gtf} --sjdbOverhang "+str(READLENGTH -1)

#rule create_STAR_reference_without_annotation:
#  input: fasta = MAIN_DIR + 'reference/fasta/contigs.fa'
#  output: MAIN_DIR +"reference/STARreference"
#  threads : 16
#  shell: "testing"


# Map
rule map_paired_end_reads:
     input: forward = MAIN_DIR + "reads/{sample}.1.fastq.gz", reverse = MAIN_DIR + "reads/{sample}.2.fastq.gz", reference = MAIN_DIR +"reference/STARreference/SAindex"
     output: samFile = MAIN_DIR + "mapping/{sample}/Aligned.out.sam", LogFile = MAIN_DIR + "mapping/{sample}/Log.final.out", SampleDir =  MAIN_DIR + "mapping/{sample}/"
     threads: 8
     shell: "STAR "+STAR_MAP_FLAGS +" --genomeDir "+MAIN_DIR +"reference/STARreference --readFilesIn {input.forward} {input.reverse} --runThreadN {threads} --readFilesCommand zcat  --outFileNamePrefix {output.SampleDir}"

     
rule map_single_end_reads:
     input: read = MAIN_DIR + "reads/{sample}.fastq.gz",  reference = MAIN_DIR +"reference/STARreference/SAindex"
     output: samFile = MAIN_DIR + "mapping/{sample}/Aligned.out.sam", LogFile = MAIN_DIR + "mapping/{sample}/Log.final.out", SampleDir =  MAIN_DIR + "mapping/{sample}/"
     threads: 8
     shell: "STAR "+STAR_MAP_FLAGS +" --genomeDir "+MAIN_DIR +"reference/STARreference --readFilesIn {input.read} --runThreadN {threads} --readFilesCommand zcat  --outFileNamePrefix {output.SampleDir}"
     
     
rule softLink_SamFiles:
     input: MAIN_DIR + "mapping/{sample}/Aligned.out.sam"
     output: temp(MAIN_DIR + "mapping/bamFiles/{sample}.sam")
     shell: "ln -s {input} {output}"

rule softLink_LogFiles:
     input: MAIN_DIR + "mapping/{sample}/Log.final.out"
     output: MAIN_DIR + "mapping/logFiles/{sample}.Log.final.out"
     shell: "ln -s {input} {output}"
    	 
    	 
    	 
rule samtools_sam2bam_hairpin:
     input: MAIN_DIR + "mapping/bamFiles/{sample}.sam"
     output: temp(MAIN_DIR + "mapping/bamFiles/{sample}.temp")
     shell: "samtools view "+ SAMTOOLS_VIEW_FLAGS +"  {input} -o {output}"

# Sort the BAM files
rule samtools_sort_hairpin:
     input: MAIN_DIR + "mapping/bamFiles/{sample}.temp"
     output: MAIN_DIR + "mapping/bamFiles/{sample}.bam"
     shell: "samtools sort {input} {MAIN_DIR}/mapping/bamFiles/{wildcards.sample}"


# Index the sorted BAM files

rule samtools_index_hairpin:
     input: MAIN_DIR + "mapping/bamFiles/{sample}.bam"
     output: MAIN_DIR + "mapping/bamFiles/{sample}.bam.bai"
     shell: "samtools index {input}"

# Get counts 


rule merge_reads_counts_per_gene_into_one_file:
	input:
		bamFiles = expand(MAIN_DIR + 'mapping/bamFiles/{sample}.bam', sample=SAMPLE),
		gff = MAIN_DIR + 'reference/annotation/contigs.gtf'
	output:
		MAIN_DIR + 'results/Counts.featureCount.tab.txt'
	threads: 8
	shell:
		'featureCounts '+ FEATURE_COUNT_FLAGS +'-T {threads} -a {input.gff} -o {output} '+ MAIN_DIR + 'mapping/bamFiles/*.bam > '+MAIN_DIR + 'results/Counts.featureCount.tab.log 2>'+MAIN_DIR + 'results/Counts.featureCount.tab.setup'


